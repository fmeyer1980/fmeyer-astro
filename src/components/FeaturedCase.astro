---
import { Image } from 'astro:assets'
import { type CollectionEntry } from 'astro:content';
import { getEntries } from 'astro:content';

type Props = {
  casee: CollectionEntry<"cases">;
}

const { caseItem } = Astro.props;
const { title, cover_image_alt, teaser, thumbnail, hasLandingpage, linkUrl } = caseItem.data;

const catData = await getEntries(caseItem.data.categories);
---
<li class="featured-work flow flow-space-300" >
    <div class="featured-work__image-wrapper image-overlay" >
        <Image transition:name={'case-image' + caseItem.slug} src={thumbnail} alt={cover_image_alt} width="640" format="avif"  />
    </div>
    <div class="featured-work__content [ flow ]">
        <h3 class="h3 leading-none">{ title } </h3>
        <hr>
        <p class="text-150 leading-mid opc-80">{teaser}</p>
        <ul class="teknologies text-100 cluster gap-xs">
            {catData.map((item) =>
                <li>{item.data.title}</li>
            )}
        </ul>
        <a target={ hasLandingpage ? '_self' : '_blank' } href={ hasLandingpage ? ('/cases/' + caseItem.slug) : linkUrl } class="btn link-parent" data-type="primary">{hasLandingpage ? 'Læs mere om ' : 'Gå til '}  {title .toLowerCase()}</a>
    </div>
</li>

<style lang="scss">

@import './src/scss/config';

$generate-utility-classes: false;
@import './node_modules/gorko/gorko.scss';

.featured-work{
    background-color: get-color('dark-shade-darker');
    padding: get-size('300');
    margin-bottom: get-size('600');
    border: dashed 1px rgba(get-color('white'), .2);
    border-radius: 5px;
    position: relative;
    z-index: 10;
    box-shadow: 15px 15px 30px 0px rgba(0, 0, 0, 0);
    transition: box-shadow .3s ease-in-out;
    display: flex;
    flex-direction: column;
    flex-basis: clamp(16rem, 22vw, 25rem);
    overflow: hidden;
    container-type: inline-size;


    &:hover{
        box-shadow: 15px 15px 30px 0px rgba(0, 0, 0, .4);
    }

    &__image-wrapper{
        display: block;

        &::before{
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 10%;
            background: linear-gradient(to top, get-color('dark-shade-darker') 25%, hsla(var(--dark-shade-darker), 0));
            z-index: 20;
        }

        img{
            width: 100%;
            height: auto;
        }
    }

    &__content{
        height: 100%;
        display: flex;
        flex-direction: column;

        p{
            flex-grow: 1;
        }

        .teknologies{

            li{
                border: dashed 1px rgba(get-color('white'), .2);
                border-radius: 3px;
                padding: .3em .8em .4em;
                @include apply-utility('leading','none')
            }
        }
    
    }
}

@keyframes slideUp {
  from {
    transform: translateY(20%);
    opacity: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes slideDown {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    opacity: 0;
    transform: translateY(20%);
  }
}

</style>